import{_ as e,o as l,c as t,S as r}from"./chunks/framework.a76ee0a9.js";const u=JSON.parse('{"title":"Rollkit","description":"","frontmatter":{},"headers":[],"relativePath":"developers/rollkit.md","filePath":"developers/rollkit.md"}'),o={name:"developers/rollkit.md"},a=r('<h1 id="rollkit" tabindex="-1">Rollkit <a class="header-anchor" href="#rollkit" aria-label="Permalink to &quot;Rollkit&quot;">​</a></h1><p><img src="https://docs.celestia.org/assets/images/rollkit-a3c303985129391d591d82877628422a.png" alt=""></p><p><a href="https://rollkit.dev/" target="_blank" rel="noreferrer">Rollkit</a>是一个为自主 Rollup 部署在 Celestia 上的 ABCI（Application Blockchain Interface）实现。</p><p>它通过将 Cosmos-SDK 共识层中的 Tendermint 替换为一个可直接与 Celestia 的数据可用性层通信的替代组件来构建。</p><p>Rollkit 启动了一个自主 Rollup，将交易收集到区块中，并将其提交到 Celestia 进行共识和数据可用性。</p><p>Rollkit 的目标是使任何人都能够在几分钟内设计和部署一个在 Celestia 上运行的自主 Rollup 。</p><p>此外，虽然 Rollkit 允许你在 Celestia 上构建自主 Rollup，但它目前尚不支持欺诈证明，因此在“悲观”模式下运行，节点需要重新执行交易以检查链的有效性（即全节点）。此外，Rollkit 目前仅支持单个排序器。</p><h2 id="教程" tabindex="-1">教程 <a class="header-anchor" href="#教程" aria-label="Permalink to &quot;教程&quot;">​</a></h2><p>下列教程将帮助你开始构建与 Celestia 的数据可用性层通过 Rollkit 连接的 Cosmos-SDK 应用程序。我们将这些链称为自主 Rollup。</p><p>你可以从以下教程开始：</p><ul><li><a href="https://rollkit.dev/docs/tutorials/hello-world" target="_blank" rel="noreferrer">Hello world</a></li><li><a href="https://rollkit.dev/docs/tutorials/gm-world" target="_blank" rel="noreferrer">GM world</a></li><li><a href="https://rollkit.dev/docs/tutorials/recipe-book" target="_blank" rel="noreferrer">Recipe book</a></li><li><a href="https://rollkit.dev/docs/tutorials/wordle" target="_blank" rel="noreferrer">Wordle game</a></li><li><a href="https://rollkit.dev/docs/tutorials/cosmwasm" target="_blank" rel="noreferrer">CosmWasm tutorial</a></li><li><a href="https://rollkit.dev/docs/tutorials/ethermint" target="_blank" rel="noreferrer">Ethermint tutorial</a></li><li><a href="https://docs.celestia.org/developers/full-stack-modular-development-guide/" target="_blank" rel="noreferrer">Full stack modular blockchain development guide</a></li></ul>',11),i=[a];function s(d,p,n,c,k,h){return l(),t("div",null,i)}const f=e(o,[["render",s]]);export{u as __pageData,f as default};
